#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

int comp_i(const void *a, const void *b)
{
    return *(int*) a - *(int*) b;
}


int comp_f(const void *a, const void *b)
{

    if ((*(float*)a-*(float*)b) > 0)
        return 1;
    else
        return -1;
}
int comp_str(const void*a, const void *b)
{
    int d = strcmp(*(char**)a,*(char**)b);
    int c = strlen(*(char **)a) - strlen(*(char **)b);
    if(d == 0)  return c;
        else return d;
}

void swap(unsigned char *a, unsigned char *b, int size)
{
    do
    {
        unsigned char tmp;
        tmp = *a;
        *a = *b;
        *b = tmp;
        a++; b++; size--;
    } while(size > 0);
}

void sort(void *ar, int size, int el_size, int (*comp)(const void *,const void *))
{
    int i, j;
    unsigned char *n = (unsigned char *)ar;
    for(i = 0; i < size; ++i)
        for(j = 0; j < size - i - 1; ++j)
            if(comp(n + j * el_size, n + (j + 1) * el_size) > 0)
                swap(n + j * el_size, n + (j + 1) * el_size, el_size);
}

int main()
{
    int N = 5;
    int i = 0;
    int type;
    printf("1 - int\n2 - float\n3 - char*\nSelect mode: ");
    scanf("%d\n",&type);

    //1-ЕСЛИ ИНТ

    if (type==1)
    {
        int *arr = (int*) malloc(N*sizeof(int));
        //int arr[N];
        for (i=0;i<N;i++)
            scanf("%d",&arr[i]);
        sort(arr,N,sizeof(int),comp_i);
        for (i=0;i<N;i++)
            printf("%d. %d\n",i+1,arr[i]);
    }

    //2-ЕСЛИ ФЛОАТ
    if (type==2)
    {
        float *arr = (float*)malloc(N*sizeof(float));
        for (i=0;i<N;i++)
            scanf(" %f",&arr[i]);
        sort(arr,N,sizeof(float),comp_f);
        for (i=0;i<N;i++)
            printf("%d. %g\n",i+1,arr[i]);
    }

    //3-ЕСЛИ ЧАР СО ЗВЕЗДОЧКОЙ
    if (type==3)
    {
        char **arr = (char**) malloc(N*sizeof(char*));
        for (i=0;i<N;i++)
        {
            arr[i] = (char*)malloc(50*sizeof(char));
            fgets(arr[i],50,stdin);
            arr[i][strlen(arr[i]) - 1] = '\0';
        }
        sort(arr,N,sizeof(char*),comp_str);
            printf("Result:\n");
        for (i=0;i<N;i++)
            printf("%d. %s\n",i+1,arr[i]);

    }
    return 0;
}
