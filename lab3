
#include <stdio.h>
#include <string.h>
#include <dirent.h>
#include <sys/types.h>
#include <regex.h>
#include <stdlib.h>
#include <ctype.h>

struct rt{
long int x;
char str[1000];
};

int comp(const void *a,const void *b){
	return (((const struct rt *)a)->x-((const struct rt *)b)->x);
}
/*
int comp(const void *a,const void *b){
	int i;
	char* str1=*(char**)a;
	char* str2=*(char**)b;

	char num1[100];
	char num2[100];

	for(i=0;i<strlen(str1);i++){
		if(isdigit(str1[i]))
		num1[i]=str1[i];
		if(isspace(str1[i])) break;
	}

	for(i=0;i<strlen(str1);i++){
		if(isspace(str2[i]))
			break;
		if(isdigit(str2[i]))
			num2[i]=str2[i];
	}
		if(atoi(num1)>atoi(num2)) return 1;
	else return -1;
	return 0;//atoi(num1)-atoi(num2);
}
*/

void writel(char *nextDir,struct rt* buff /*char **buff*/,int *i){
	FILE *file=fopen(nextDir,"r");
	//fgets(buff[*i],100,file);
	fscanf(file, "%ld", &buff[*i].x);
	fgets(buff[*i].str,1000,file);
	fclose(file);
	*i=*i+1;
}

int listDir(char *startDir,struct rt* buf /*char **buf*/,int* count){
	char nextDir[200]={0};
	strcpy(nextDir, startDir);
	DIR *dir = opendir(startDir);

	if(!dir){
		return 0;
	}
	struct dirent *de = readdir(dir);
	while(de){
		if(de->d_type == DT_DIR && strcmp(de->d_name, ".") != 0 && strcmp(de->d_name, "..") != 0){
			int len = strlen(nextDir);
			strcat(nextDir, "/");
			strcat(nextDir,de->d_name);
			listDir(nextDir,buf,count);
			nextDir[len] = '\0';
			}
		if(de->d_type == DT_REG ){
			int len = strlen(nextDir);
			strcat(nextDir, "/");
			strcat(nextDir,de->d_name);
			writel(nextDir,buf,count);

			nextDir[len] = '\0';
			}
		de = readdir(dir);
			}
	closedir(dir);
	return 1;
}



int main(){
	int i=0; 
	int count=0;
/*	char **buff;
	buff=(char**)malloc(10*sizeof(char*));
	for(int j=0;j<10;j++)
	{
	buff[j]=(char*)malloc(100*sizeof(char));
	}
	*/struct rt* mass=(struct rt *)malloc(10000*sizeof(struct rt));


	while(i!=1){
		i=listDir("/home/apel7in/test",mass,&count);
	}


	qsort(mass,count,sizeof(struct rt),comp);
	FILE* file = fopen("/home/apel7in/test/result.txt" , "w");
	for(i=0;i<count;i++){
		fprintf (file,"%ld %s\n",mass[i].x,mass[i].str);
}
	fclose(file);
//	for(int j=0;j<10;j++)
//	free(buff[j]);
	free(mass);
	return 0;
}
